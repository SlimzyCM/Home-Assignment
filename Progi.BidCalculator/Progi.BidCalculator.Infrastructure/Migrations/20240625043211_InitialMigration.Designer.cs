// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Progi.BidCalculator.Infrastructure;

#nullable disable

namespace Progi.BidCalculator.Infrastructure.Migrations
{
    [DbContext(typeof(CalculatorContext))]
    [Migration("20240625043211_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Progi.BidCalculator.Core.Entities.CalculatorSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ApplyMinMaxLimits")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("FeeType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("From")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Maximum")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Minimum")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Rate")
                        .HasColumnType("TEXT");

                    b.Property<int>("RateType")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("To")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("VehicleType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("CalculatorSettings");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApplyMinMaxLimits = true,
                            CreationDate = new DateTime(2024, 6, 25, 4, 32, 10, 81, DateTimeKind.Utc).AddTicks(499),
                            FeeType = 0,
                            From = 0m,
                            Maximum = 50m,
                            Minimum = 10m,
                            Rate = 10m,
                            RateType = 0,
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 2L,
                            ApplyMinMaxLimits = true,
                            CreationDate = new DateTime(2024, 6, 25, 4, 32, 10, 81, DateTimeKind.Utc).AddTicks(507),
                            FeeType = 0,
                            From = 0m,
                            Maximum = 200m,
                            Minimum = 25m,
                            Rate = 10m,
                            RateType = 0,
                            VehicleType = 1
                        },
                        new
                        {
                            Id = 3L,
                            ApplyMinMaxLimits = false,
                            CreationDate = new DateTime(2024, 6, 25, 4, 32, 10, 81, DateTimeKind.Utc).AddTicks(509),
                            FeeType = 3,
                            From = 0m,
                            Maximum = 0m,
                            Minimum = 0m,
                            Rate = 2m,
                            RateType = 0,
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 4L,
                            ApplyMinMaxLimits = false,
                            CreationDate = new DateTime(2024, 6, 25, 4, 32, 10, 81, DateTimeKind.Utc).AddTicks(511),
                            FeeType = 3,
                            From = 0m,
                            Maximum = 0m,
                            Minimum = 0m,
                            Rate = 4m,
                            RateType = 0,
                            VehicleType = 1
                        },
                        new
                        {
                            Id = 5L,
                            ApplyMinMaxLimits = false,
                            CreationDate = new DateTime(2024, 6, 25, 4, 32, 10, 81, DateTimeKind.Utc).AddTicks(517),
                            FeeType = 2,
                            From = 1m,
                            Maximum = 0m,
                            Minimum = 0m,
                            Rate = 5m,
                            RateType = 1,
                            To = 500m
                        },
                        new
                        {
                            Id = 6L,
                            ApplyMinMaxLimits = false,
                            CreationDate = new DateTime(2024, 6, 25, 4, 32, 10, 81, DateTimeKind.Utc).AddTicks(520),
                            FeeType = 2,
                            From = 501m,
                            Maximum = 0m,
                            Minimum = 0m,
                            Rate = 10m,
                            RateType = 1,
                            To = 1000m
                        },
                        new
                        {
                            Id = 7L,
                            ApplyMinMaxLimits = false,
                            CreationDate = new DateTime(2024, 6, 25, 4, 32, 10, 81, DateTimeKind.Utc).AddTicks(522),
                            FeeType = 2,
                            From = 1001m,
                            Maximum = 0m,
                            Minimum = 0m,
                            Rate = 15m,
                            RateType = 1,
                            To = 3000m
                        },
                        new
                        {
                            Id = 8L,
                            ApplyMinMaxLimits = false,
                            CreationDate = new DateTime(2024, 6, 25, 4, 32, 10, 81, DateTimeKind.Utc).AddTicks(525),
                            FeeType = 2,
                            From = 3001m,
                            Maximum = 0m,
                            Minimum = 0m,
                            Rate = 20m,
                            RateType = 1
                        },
                        new
                        {
                            Id = 9L,
                            ApplyMinMaxLimits = false,
                            CreationDate = new DateTime(2024, 6, 25, 4, 32, 10, 81, DateTimeKind.Utc).AddTicks(566),
                            FeeType = 1,
                            From = 0m,
                            Maximum = 0m,
                            Minimum = 0m,
                            Rate = 100m,
                            RateType = 1,
                            VehicleType = 0
                        },
                        new
                        {
                            Id = 10L,
                            ApplyMinMaxLimits = false,
                            CreationDate = new DateTime(2024, 6, 25, 4, 32, 10, 81, DateTimeKind.Utc).AddTicks(568),
                            FeeType = 1,
                            From = 0m,
                            Maximum = 0m,
                            Minimum = 0m,
                            Rate = 100m,
                            RateType = 1,
                            VehicleType = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
